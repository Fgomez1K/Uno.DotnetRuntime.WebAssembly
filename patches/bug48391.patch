From f8827e38f6dda9539b05190f4630f025ad9737e4 Mon Sep 17 00:00:00 2001
From: Katelyn Gadd <kg@luminance.org>
Date: Wed, 17 Feb 2021 00:16:50 -0800
Subject: [PATCH 1/4] Add test for issue 48345

---
 .../InteropServices/JavaScript/HelperMarshal.cs    | 12 ++++++++++++
 .../InteropServices/JavaScript/MarshalTests.cs     | 14 ++++++++++++++
 2 files changed, 26 insertions(+)

diff --git a/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs b/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs
index 8c2e8fe5527f..6616d2841aaa 100644
--- a/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs
+++ b/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs
@@ -66,6 +66,18 @@ private static void InvokeString2(string s)
             _stringResource2 = s;
         }
 
+        private static void StoreLiteralAndArgument(string s1)
+        {
+            _stringResource = s1;
+            _stringResource2 = "1";
+        }
+
+        private static string Issue48345(string s)
+        {
+            _stringResource = $"s: {s} length: {s?.Length}";
+            return "1";
+        }
+
         internal static string _marshalledString;
         private static string InvokeMarshalString()
         {
diff --git a/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/MarshalTests.cs b/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/MarshalTests.cs
index 029a215c0c3f..f734b8983a3f 100644
--- a/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/MarshalTests.cs
+++ b/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/MarshalTests.cs
@@ -841,5 +841,19 @@ public static void SymbolsAreMarshaledAsStrings()
             Assert.Equal(HelperMarshal._stringResource, HelperMarshal._stringResource2);
             Assert.True(Object.ReferenceEquals(HelperMarshal._stringResource, HelperMarshal._stringResource2));
         }
+
+        [Fact]
+        public static void Issue48345()
+        {
+            HelperMarshal._stringResource = HelperMarshal._stringResource2 = null;
+            var fqn = "[System.Private.Runtime.InteropServices.JavaScript.Tests]System.Runtime.InteropServices.JavaScript.Tests.HelperMarshal:Issue48345";
+            Runtime.InvokeJS(
+                $"var a = BINDING.bind_static_method('{fqn}')('test');\r\n" +
+                $"var b = BINDING.bind_static_method('{fqn}')(a);\r\n" +
+                "App.call_test_method ('InvokeString2', [ b ]);"
+            );
+            Assert.Equal("s: 1 length: 1", HelperMarshal._stringResource);
+            Assert.Equal("1", HelperMarshal._stringResource2);
+        }
     }
 }

From bda46a148389e426be05c6de48d0b255589019b3 Mon Sep 17 00:00:00 2001
From: Katelyn Gadd <kg@luminance.org>
Date: Wed, 17 Feb 2021 00:39:12 -0800
Subject: [PATCH 2/4] Fix issue 48345

---
 src/mono/wasm/runtime/binding_support.js | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/src/mono/wasm/runtime/binding_support.js b/src/mono/wasm/runtime/binding_support.js
index 8d2ab92af0e8..877029091156 100644
--- a/src/mono/wasm/runtime/binding_support.js
+++ b/src/mono/wasm/runtime/binding_support.js
@@ -171,6 +171,8 @@ var BindingSupportLib = {
 		_store_string_in_intern_table: function (string, ptr, internIt) {
 			if (!ptr)
 				throw new Error ("null pointer passed to _store_string_in_intern_table");
+			else if (typeof (ptr) !== "number")
+				throw new Error (`non-pointer passed to _store_string_in_intern_table: ${typeof(ptr)} ${ptr}, for string '${string}'`);
 
 			var originalArg = ptr;
 			
@@ -300,13 +302,13 @@ var BindingSupportLib = {
 
 			var arrayRoot = MONO.mono_wasm_new_root (mono_array);
 			try {
-				return this._mono_array_to_js_array_rooted (arrayRoot);
+				return this._mono_array_root_to_js_array (arrayRoot);
 			} finally {
 				arrayRoot.release();
 			}
 		},
 
-		_mono_array_to_js_array_rooted: function (arrayRoot) {
+		_mono_array_root_to_js_array: function (arrayRoot) {
 			if (arrayRoot.value === 0)
 				return null;
 
@@ -320,9 +322,9 @@ var BindingSupportLib = {
 					elemRoot.value = this.mono_array_get (arrayRoot.value, i);
 
 					if (this.is_nested_array (elemRoot.value))
-						res[i] = this._mono_array_to_js_array_rooted (elemRoot);
+						res[i] = this._mono_array_root_to_js_array (elemRoot);
 					else
-						res[i] = this._unbox_mono_obj_rooted (elemRoot);
+						res[i] = this._unbox_mono_obj_root (elemRoot);
 				}
 			} finally {
 				elemRoot.release ();
@@ -353,7 +355,7 @@ var BindingSupportLib = {
 
 			var root = MONO.mono_wasm_new_root (mono_obj);
 			try {
-				return this._unbox_mono_obj_rooted (root);
+				return this._unbox_mono_obj_root (root);
 			} finally {
 				root.release();
 			}
@@ -447,7 +449,7 @@ var BindingSupportLib = {
 			}
 		},
 
-		_unbox_mono_obj_rooted: function (root) {
+		_unbox_mono_obj_root: function (root) {
 			var mono_obj = root.value;
 			if (mono_obj === 0)
 				return undefined;
@@ -1295,7 +1297,7 @@ var BindingSupportLib = {
 			this._handle_exception_for_call (converter, buffer, resultRoot, exceptionRoot, argsRootBuffer);
 
 			if (is_result_marshaled)
-				result = this._unbox_mono_obj_rooted (resultRoot);
+				result = this._unbox_mono_obj_root (resultRoot);
 			else
 				result = resultRoot.value;
 
@@ -1428,7 +1430,7 @@ var BindingSupportLib = {
 				"    case 28:", // char
 				"        result = String.fromCharCode(Module.HEAP32[buffer / 4]); break;",
 				"    default:",
-				"        result = binding_support._unbox_mono_obj_rooted_with_known_nonprimitive_type (resultRoot, resultType); break;",
+				"        result = binding_support._unbox_mono_obj_rooted_with_known_nonprimitive_type (resultRoot.value, resultType); break;",
 				"    }",
 				"}",
 				"",

From c507a0e242020f851e62c82dc2aa6e3bbf8037a8 Mon Sep 17 00:00:00 2001
From: Katelyn Gadd <kg@luminance.org>
Date: Wed, 17 Feb 2021 00:41:37 -0800
Subject: [PATCH 3/4] Remove unused test method

---
 .../Runtime/InteropServices/JavaScript/HelperMarshal.cs     | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs b/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs
index 6616d2841aaa..ac4dbb6baf03 100644
--- a/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs
+++ b/src/libraries/System.Private.Runtime.InteropServices.JavaScript/tests/System/Runtime/InteropServices/JavaScript/HelperMarshal.cs
@@ -66,12 +66,6 @@ private static void InvokeString2(string s)
             _stringResource2 = s;
         }
 
-        private static void StoreLiteralAndArgument(string s1)
-        {
-            _stringResource = s1;
-            _stringResource2 = "1";
-        }
-
         private static string Issue48345(string s)
         {
             _stringResource = $"s: {s} length: {s?.Length}";

From cd0112b9db14187b7108a35916dec6216932f27c Mon Sep 17 00:00:00 2001
From: Katelyn Gadd <kg@luminance.org>
Date: Wed, 17 Feb 2021 00:42:48 -0800
Subject: [PATCH 4/4] Cleanup

---
 src/mono/wasm/runtime/binding_support.js | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/src/mono/wasm/runtime/binding_support.js b/src/mono/wasm/runtime/binding_support.js
index 877029091156..35823cc8b0d5 100644
--- a/src/mono/wasm/runtime/binding_support.js
+++ b/src/mono/wasm/runtime/binding_support.js
@@ -172,9 +172,7 @@ var BindingSupportLib = {
 			if (!ptr)
 				throw new Error ("null pointer passed to _store_string_in_intern_table");
 			else if (typeof (ptr) !== "number")
-				throw new Error (`non-pointer passed to _store_string_in_intern_table: ${typeof(ptr)} ${ptr}, for string '${string}'`);
-
-			var originalArg = ptr;
+				throw new Error (`non-pointer passed to _store_string_in_intern_table: ${typeof(ptr)}`);
 			
 			const internBufferSize = 8192;
 
@@ -1430,7 +1428,7 @@ var BindingSupportLib = {
 				"    case 28:", // char
 				"        result = String.fromCharCode(Module.HEAP32[buffer / 4]); break;",
 				"    default:",
-				"        result = binding_support._unbox_mono_obj_rooted_with_known_nonprimitive_type (resultRoot.value, resultType); break;",
+				"        result = binding_support._unbox_mono_obj_rooted_with_known_nonprimitive_type (resultPtr, resultType); break;",
 				"    }",
 				"}",
 				"",
